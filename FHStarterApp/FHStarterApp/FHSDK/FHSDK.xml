<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FHSDK</name>
    </assembly>
    <members>
        <member name="T:FHSDK.FH">
            <summary>
            This is the main FeedHenry SDK class
            </summary>
        </member>
        <member name="M:FHSDK.FH.GetAppProps">
            <summary>
            Get the app configurations defined in fh.config file
            </summary>
            <returns>The app configurations defined in fh.config file</returns>
        </member>
        <member name="M:FHSDK.FH.Init">
            <summary>
            Initialise FeedHenry WindowsPhone SDK. This function should be called when the app is ready.
            </summary>
            <example>
            <code>
            try
            {
              bool inited = await FH.Init();
              if(inited)
              {
                //Initialisation is successful
              }
            }
            catch(FHException e)
            {
              //Initialisation failed, handle exception
            }
            </code>
            </example>
            <returns>If Init is success or not</returns>
            <exception cref="T:FHSDK.FHHttpClient.FHException"></exception>
        </member>
        <member name="M:FHSDK.FH.Act(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Invoke a cloud function.
            </summary>
            <param name="remoteAct">The name of the cloud function name</param>
            <param name="actParams">The parameters passed to the cloud function</param>
            <example>
            <code>
            string cloudFunc = "test";
            IDictionary&lt;string, object&gt; dict = new Dictionary&lt;string, object&gt;();
            dict.Add("data", "test");
            FHResponse response = await FH.Act(cloudFunc, dict);
            if(null == response.Error)
            {
              //no error occured, the request is successful
              string rawResponseData = response.RawResponse;
              //you can get it as JSONObject (require Json.Net library)
              JObject resJson = response.GetResponseAsJObject();
              //process response data
            }
            else
            {
              //error occured during the request, deal with it.
              //More infomation can be access from response.Error.InnerException
            }
            </code>
            </example>
            <returns>The response data returned by the cloud function</returns>
            <exception cref="T:System.InvalidOperationException"> It will be thrown if FH SDK is not ready.</exception>
        </member>
        <member name="M:FHSDK.FH.ReadAppPropsAsync">
            <summary>
            Read the app configurations from fh.config file
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FH.SaveInitInfo(System.String)">
            <summary>
            Save app init info. Mainly used for analytics.
            </summary>
            <param name="initInfo"></param>
        </member>
        <member name="P:FHSDK.FH.SDK_VERSION">
            <summary>
            Get the current version of the FeedHenry WindowsPhone SDk
            </summary>
        </member>
        <member name="P:FHSDK.FH.TimeOut">
            <summary>
            Get or Set the timeout value for all the requests. Default is 30 seconds.
            </summary>
        </member>
        <member name="T:FHSDK.AppProps">
            <summary>
            Describe the app configuration options in fh.config file.
            </summary>
        </member>
        <member name="P:FHSDK.AppProps.host">
            <summary>
            Get or Set the app host
            </summary>
        </member>
        <member name="P:FHSDK.AppProps.projectid">
            <summary>
            Get or set the project id
            </summary>
        </member>
        <member name="P:FHSDK.AppProps.appid">
            <summary>
            Get or set the appid
            </summary>
        </member>
        <member name="P:FHSDK.AppProps.appkey">
            <summary>
            Get or set the app API key
            </summary>
        </member>
        <member name="P:FHSDK.AppProps.mode">
            <summary>
            Get or set the app mode
            </summary>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHException">
            <summary>
            The exception that is thrown by FH API calls
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHException.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHException.#ctor(System.String)">
            <summary>
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHException.#ctor(System.String,FHSDK.FHHttpClient.FHException.ErrorCode)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="errorCode"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHException.#ctor(System.String,FHSDK.FHHttpClient.FHException.ErrorCode,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="errorCode"></param>
            <param name="baseException"></param>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHException.Error">
            <summary>
            Get the error code
            </summary>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHException.ErrorCode">
            <summary>
            Possible error codes
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHException.ErrorCode.UnknownError">
            <summary>
            This error code means the error is unknown
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHException.ErrorCode.NetworkError">
            <summary>
            This error code means the device is offline
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHException.ErrorCode.HttpError">
            <summary>
            This error code means http exception is thrown by the http client
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHException.ErrorCode.ServerError">
            <summary>
            This error code means the server returns error 
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHException.ErrorCode.AuthenticationError">
            <summary>
            This error code means authentication failed
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHException.ErrorCode.Cancelled">
            <summary>
            User cancelled
            </summary>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHHttpClient">
            <summary>
            HttpClient used by the SDK
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHHttpClient.IsOnlineAsync">
            <summary>
            Check if the device is online
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHHttpClient.PostAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
            <summary>
            Post request to the remote uri
            </summary>
            <param name="uri">The remote uri</param>
            <param name="requestData">The request data</param>
            <param name="timeout">Timeout in milliseconds</param>
            <returns>Server response</returns>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHRequest">
            <summary>
            Base class for all the API requests
            </summary>
        </member>
        <member name="F:FHSDK.FHHttpClient.FHRequest.appProps">
            <summary>
            The app configurations
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHRequest.#ctor(FHSDK.AppProps)">
            <summary>
            
            </summary>
            <param name="appProps"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHRequest.execAsync">
            <summary>
            Execute the request asynchronously
            </summary>
            <returns>Server response</returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHRequest.GetDefaultParams">
            <summary>
            Get the default request parameters
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHRequest.GetInitInfo">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHRequest.GetUri">
            <summary>
            Construct the remote uri based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHRequest.GetRequestParams">
            <summary>
            Construct the request data based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHRequest.TimeOut">
            <summary>
            Get or set the timeout value
            </summary>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHRequest.UUID">
            <summary>
            Get the unique client id for analytics.
            </summary>
            <remarks>
            It will use Windows Phone ANID by default. If it's not avaiable, the unique device id will be used.
            </remarks>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHInitRequest">
            <summary>
            Class represents init requests
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHInitRequest.#ctor(FHSDK.AppProps)">
            <summary>
            Constructor
            </summary>
            <param name="appProps"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHInitRequest.GetUri">
            <summary>
            Construct the remote uri based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHInitRequest.GetRequestParams">
            <summary>
            Construct the request data based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHActRequest">
            <summary>
            Class represents act requests
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHActRequest.#ctor(FHSDK.AppProps,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Constructor
            </summary>
            <param name="appProps"></param>
            <param name="cloudProps"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHActRequest.execAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Execute the act request asynchronously
            </summary>
            <param name="remoteAct">The name of the cloud action</param>
            <param name="requestParams">The request parameters</param>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHActRequest.GetUri">
            <summary>
            Construct the remote uri based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHActRequest.GetRequestParams">
            <summary>
            Construct the request data based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHActRequest.RemoteAct">
            <summary>
            Get or set the remote cloud function name
            </summary>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHActRequest.RequestParams">
            <summary>
            Get or set the request parameters
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHAuthRequest.GetUri">
            <summary>
            Construct the remote uri based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHAuthRequest.GetRequestParams">
            <summary>
            Construct the request data based on the request type
            </summary>
            <returns></returns>
        </member>
        <member name="T:FHSDK.FHHttpClient.FHResponse">
            <summary>
            </summary>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHResponse.#ctor(System.Net.HttpStatusCode,System.String)">
             <summary>
            
             </summary>
             <param name="statusCode"></param>
             <param name="rawResponse"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHResponse.#ctor(System.Net.HttpStatusCode,System.String,FHSDK.FHHttpClient.FHException)">
            <summary>
            
            </summary>
            <param name="statusCode"></param>
            <param name="rawResponse"></param>
            <param name="error"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHResponse.#ctor(System.String,FHSDK.FHHttpClient.FHException)">
            <summary>
            
            </summary>
            <param name="rawResponse"></param>
            <param name="error"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHResponse.#ctor(FHSDK.FHHttpClient.FHException)">
            <summary>
            
            </summary>
            <param name="error"></param>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHResponse.GetResponseAsJObject">
            <summary>
            Get the response data as JSON object
            </summary>
            <returns></returns>
        </member>
        <member name="M:FHSDK.FHHttpClient.FHResponse.GetResponseAsJArray">
            <summary>
            Get the response data as JSON array
            </summary>
            <returns></returns>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHResponse.StatusCode">
            <summary>
            Get the status code of the response
            </summary>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHResponse.RawResponse">
            <summary>
            Get the raw response data
            </summary>
        </member>
        <member name="P:FHSDK.FHHttpClient.FHResponse.Error">
            <summary>
            Get the response error. Should be null if the request is successful.
            </summary>
        </member>
    </members>
</doc>
